#include<iostream> 
using namespace std; 

int maxSubArraySum(int a[], int size) 
{ 
int max_so_far = a[0]; 
int curr_max = a[0];
int start=1,end=1,temp=1;

for (int i = 1; i < size; i++) 
{ 
        if(a[i]>curr_max+a[i])
        {
           curr_max=a[i];
           temp=i;
        }
        else
        {
          curr_max=curr_max +a[i];
        }
           
        if(curr_max>max_so_far)
        {
          max_so_far=curr_max;
          start=temp;
          end=i;
        }
} 
for(int i=start;i<=end;i++) cout<<a[i]<<" ";cout<<endl;
return max_so_far; 
} 

/* Driver program to test maxSubArraySum */
int main() 
{ 
int a[] = {-2, -3, 4, -1, -2, 1, 5, -3}; 
int n = sizeof(a)/sizeof(a[0]); 
int max_sum = maxSubArraySum(a, n); 
cout << "Maximum contiguous sum is " << max_sum; 
return 0; 
} 
